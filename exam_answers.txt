1. Наследование, инкапсуляция, полиморфизм.
Наследование - дочерний класс (который экстендит) расширяет состояние (поля) и методы родительского класса (от которого экстендится).
Инкапсуляция - сокрытие данных от внешних объектов. Реализуется с помощью модификаторов доступа:
public - доступно отовсюду; 
package (no modifier) - доступно из пакета;
protected - доступно из пакета и дочерних классов;
private - доступно внутри класса;
Полиморфизм - один метод имеет много реализаций. В Java есть 3 вида полиморфизма:
Overloading - методы с одним именем, но разными параметрами;
Overriding - переписывание метода родительского класса;
Overriding (with interfaces) - реализация абстрактного метода;
2. public - доступно отовсюду; 
package (no modifier) - доступно из пакета;
protected - доступно из пакета и дочерних классов;
private - доступно внутри класса;
3. оператор '+' - со строками объеденяет, с числовыми значениями плюсует.
4. модификатор static означает, что поле\метод существует в единственном экземпляре, то есть является членом класса, а не его объектов.
5. charAt(int index) - возвращает символ по указанному индексу.
concat(String str) - соеденяет строку с указанной.
compareTo(String str) - сравнивает строки лексикографически.
length() - возвращает длинну строки в виде int.
trim() - удаляет пробелы в начале и в конце.
6. String является неизменяемым (immutable) обьектом, StringBuilder - изменяемый, StringBuffer - изменяемый, используется при многопоточности.
7. this - ссылка на текущий объект(класс)
(пример Q7)
8. super - ссылка на родительский класс. 
(пример Q8parent, Q8child)
9. Конструктор класса - это метод (без типа возвращаемого значения), который вызывается при создании экземпляра данного класа (after new keyword).
10. Если в классе есть хотя бы один абстрактный метод, то весь класс должен быть объявлен как abstract. В то же время абстрактный класс может содержать в себе обычные не абстрактные классы. Класс, который наследуется от абстрактного класса обязан реализовать его абстрактные методы. Члены абстрактного класса могут иметь все стандартные модификаторы доступа. Нельзя создать экземпляр абстрактного класса (но можно объявить переменную типа абстрактного класса).
Интерфейс может содержать в себе только константы, абстрактные и дефолтные методы. Все члены интерфейса могут иметь только public доступ. Класс, который имплементит интерфейс обязан реализовать все его абстрактные методы. Нельзя создать объект интерфейса (но можно объявить переменную типа интерфейса).
11. ArrayList - неупорядоченный список (динамический массив). LinkedList - связной список. Обьекты сортируются в том порядке, в котором они были добавлены.
12. HashSet - множество, объекты которого находятся в не сортированном виде. 
LinkedHashSet - объекты сортируются в порядке добавления, HashMap - множество, реализованное на структуре красно-черного дерева. Сортируются лексикографически.
13. (пример Q13)
14. (Q14)
15. (Q15)
16. break - ключевое слово для выхода из метода\цикла;
(пример Q16)
17. return - ключеное слово для возвращения значения метода или выхода из метода.
(пример Q17)
18. (Q18)
19. Бывают обрабатываемые и не обрабатываемые. NullPointer возникает когда проводится операция с объектом, на который отсутствует ссылка (не инициализирован).
20. (Q20)
21. final в классе - нельзя наследоваться, в методе - нельзя переопределять, в конструкторе - нельзя создавать экземпляр.
22. ничего не возвращает
23. Представление страницы и ее элементов в виде класса с полями (элементами) и методами (действиями с элементами).
24. (Q8parent, Q8child)
25. (Q7)
26. (Q26)
27. (Q27)
28-29-30. (Q28)